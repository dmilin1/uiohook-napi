# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libuiohook
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=libuiohook' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DV8_COMPRESS_POINTERS' \
	'-DV8_COMPRESS_POINTERS_IN_ISOLATE_CAGE' \
	'-DV8_31BIT_SMIS_ON_64BIT_ARCH' \
	'-DV8_REVERSE_JSARGS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DOPENSSL_NO_ASM' \
	'-D__MACOSX_CORE__' \
	'-DUSE_IOKIT' \
	'-DUSE_COREFOUNDATION' \
	'-DUSE_OBJC' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++14 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/include/node \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/src \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/openssl/config \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/openssl/openssl/include \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/uv/include \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/zlib \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/v8/include \
	-I$(srcdir)/libuiohook/include \
	-I$(srcdir)/libuiohook/src \
	-I$(srcdir)/libuiohook/src/darwin

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=libuiohook' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DV8_COMPRESS_POINTERS' \
	'-DV8_COMPRESS_POINTERS_IN_ISOLATE_CAGE' \
	'-DV8_31BIT_SMIS_ON_64BIT_ARCH' \
	'-DV8_REVERSE_JSARGS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DOPENSSL_NO_ASM' \
	'-D__MACOSX_CORE__' \
	'-DUSE_IOKIT' \
	'-DUSE_COREFOUNDATION' \
	'-DUSE_OBJC'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++14 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/include/node \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/src \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/openssl/config \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/openssl/openssl/include \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/uv/include \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/zlib \
	-I/Users/Dimitrie/.electron-gyp/18.2.0/deps/v8/include \
	-I$(srcdir)/libuiohook/include \
	-I$(srcdir)/libuiohook/src \
	-I$(srcdir)/libuiohook/src/darwin

OBJS := \
	$(obj).target/$(TARGET)/libuiohook/src/logger.o \
	$(obj).target/$(TARGET)/libuiohook/src/darwin/input_helper.o \
	$(obj).target/$(TARGET)/libuiohook/src/darwin/input_hook.o \
	$(obj).target/$(TARGET)/libuiohook/src/darwin/post_event.o \
	$(obj).target/$(TARGET)/libuiohook/src/darwin/system_properties.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug :=

LDFLAGS_Release := \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release :=

LIBS :=

$(builddir)/uiohook.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/uiohook.a: LIBS := $(LIBS)
$(builddir)/uiohook.a: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/uiohook.a: TOOLSET := $(TOOLSET)
$(builddir)/uiohook.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(builddir)/uiohook.a
# Add target alias
.PHONY: libuiohook
libuiohook: $(builddir)/uiohook.a

# Add target alias to "all" target.
.PHONY: all
all: libuiohook

# Add target alias
.PHONY: libuiohook
libuiohook: $(builddir)/uiohook.a

# Short alias for building this static library.
.PHONY: uiohook.a
uiohook.a: $(builddir)/uiohook.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/uiohook.a

